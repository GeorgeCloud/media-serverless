{
  "service": {
    "service": "media-service",
    "serviceObject": {
      "name": "media-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "memorySize": 128,
      "timeout": 10,
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "TrendingMediaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-trendingMedia"
            }
          },
          "PopularMoviesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-popularMovies"
            }
          },
          "SearchMediaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-searchMedia"
            }
          },
          "GetMediaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-getMedia"
            }
          },
          "ReviewsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-Reviews"
            }
          },
          "NewReviewLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-newReview"
            }
          },
          "DeleteReviewLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/media-service-dev-deleteReview"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "media-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "media-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "TrendingMediaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/media.trending_media",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-trendingMedia",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "TrendingMediaIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TrendingMediaIamRoleLambdaExecution",
              "TrendingMediaLogGroup"
            ]
          },
          "PopularMoviesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/media.popular_movies",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-popularMovies",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "PopularMoviesIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PopularMoviesIamRoleLambdaExecution",
              "PopularMoviesLogGroup"
            ]
          },
          "SearchMediaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/media.search",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-searchMedia",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "SearchMediaIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SearchMediaIamRoleLambdaExecution",
              "SearchMediaLogGroup"
            ]
          },
          "GetMediaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/media.get_media",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-getMedia",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "GetMediaIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetMediaIamRoleLambdaExecution",
              "GetMediaLogGroup"
            ]
          },
          "ReviewsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/reviews.index_reviews",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-Reviews",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ReviewsLogGroup"
            ]
          },
          "NewReviewLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/reviews.new_review",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-newReview",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "NewReviewLogGroup"
            ]
          },
          "DeleteReviewLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z/media-service.zip"
              },
              "Handler": "api/functions/reviews.delete_review",
              "Runtime": "python3.9",
              "FunctionName": "media-service-dev-deleteReview",
              "MemorySize": 128,
              "Timeout": 10,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteReviewLogGroup"
            ]
          },
          "TrendingMediaLambdaVersionyAS9Nml2nhfeCFjmXjuFfZd8AbVo0VGiKm8RQLA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TrendingMediaLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "PopularMoviesLambdaVersionzH2HVnoUlXfPR9x5jFm82vk9eTJJAXtVP5P24tk7E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PopularMoviesLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "SearchMediaLambdaVersion8r0GbkB8nvrt1TiXryUiIPaqs7uuY60zdZzqpKu0LM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SearchMediaLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "GetMediaLambdaVersionqaCwYUFunYbU4RJxvF6TgAb1tVhR5TipwNKKO6fhew": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMediaLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "ReviewsLambdaVersion0l5xFHV0D2lX3cipVV3z5CgSZtF1OKkanGwOX3pc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ReviewsLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "NewReviewLambdaVersionI5B8TRHW8HnCMDnMKyjjJSg8z9iBfEkW1N93sZJIZQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NewReviewLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "DeleteReviewLambdaVersionyLBWxmW2e2r2xnf83DbgElfnTGMZxWGNmVBwaCxNU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteReviewLambdaFunction"
              },
              "CodeSha256": "DNnAlETwdVXNYxvN/uTyULyKGAzYayG0MVwaC7xPw4o="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-media-service",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "TrendingMediaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TrendingMediaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationTrendingMedia": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"TrendingMediaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMediaTrendingDashmedia": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /media/trending-media",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationTrendingMedia"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationTrendingMedia"
          },
          "PopularMoviesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PopularMoviesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPopularMovies": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PopularMoviesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMediaPopularDashmovies": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /media/popular-movies",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPopularMovies"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPopularMovies"
          },
          "SearchMediaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SearchMediaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSearchMedia": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchMediaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMediaSearchQueryVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /media/search/{query}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSearchMedia"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSearchMedia"
          },
          "GetMediaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMediaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMedia": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMediaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMedia": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /media",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMedia"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMedia"
          },
          "ReviewsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ReviewsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationReviews": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ReviewsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetReviews": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /reviews",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationReviews"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationReviews"
          },
          "NewReviewLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NewReviewLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationNewReview": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NewReviewLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostReviews": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /reviews",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationNewReview"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationNewReview"
          },
          "DeleteReviewLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteReviewLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteReview": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteReviewLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteReviewsReviewidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /reviews/{review_id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteReview"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteReview"
          },
          "TrendingMediaIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "media-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev-trendingMedia:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter"
                        ],
                        "Resource": "arn:aws:ssm:us-east-1:992382374041:parameter/dev/tmdb_api_key"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "media-service",
                    "dev",
                    "trendingMedia",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "PopularMoviesIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "media-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev-popularMovies:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter"
                        ],
                        "Resource": "arn:aws:ssm:us-east-1:992382374041:parameter/dev/tmdb_api_key"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "media-service",
                    "dev",
                    "popularMovies",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "SearchMediaIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "media-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev-searchMedia:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter"
                        ],
                        "Resource": "arn:aws:ssm:us-east-1:992382374041:parameter/dev/tmdb_api_key"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "media-service",
                    "dev",
                    "searchMedia",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetMediaIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "media-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/media-service-dev-getMedia:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter"
                        ],
                        "Resource": "arn:aws:ssm:us-east-1:992382374041:parameter/dev/tmdb_api_key"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "media-service",
                    "dev",
                    "getMedia",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-media-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "TrendingMediaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TrendingMediaLambdaVersionyAS9Nml2nhfeCFjmXjuFfZd8AbVo0VGiKm8RQLA"
            },
            "Export": {
              "Name": "sls-media-service-dev-TrendingMediaLambdaFunctionQualifiedArn"
            }
          },
          "PopularMoviesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PopularMoviesLambdaVersionzH2HVnoUlXfPR9x5jFm82vk9eTJJAXtVP5P24tk7E"
            },
            "Export": {
              "Name": "sls-media-service-dev-PopularMoviesLambdaFunctionQualifiedArn"
            }
          },
          "SearchMediaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SearchMediaLambdaVersion8r0GbkB8nvrt1TiXryUiIPaqs7uuY60zdZzqpKu0LM"
            },
            "Export": {
              "Name": "sls-media-service-dev-SearchMediaLambdaFunctionQualifiedArn"
            }
          },
          "GetMediaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMediaLambdaVersionqaCwYUFunYbU4RJxvF6TgAb1tVhR5TipwNKKO6fhew"
            },
            "Export": {
              "Name": "sls-media-service-dev-GetMediaLambdaFunctionQualifiedArn"
            }
          },
          "ReviewsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ReviewsLambdaVersion0l5xFHV0D2lX3cipVV3z5CgSZtF1OKkanGwOX3pc"
            },
            "Export": {
              "Name": "sls-media-service-dev-ReviewsLambdaFunctionQualifiedArn"
            }
          },
          "NewReviewLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NewReviewLambdaVersionI5B8TRHW8HnCMDnMKyjjJSg8z9iBfEkW1N93sZJIZQ"
            },
            "Export": {
              "Name": "sls-media-service-dev-NewReviewLambdaFunctionQualifiedArn"
            }
          },
          "DeleteReviewLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteReviewLambdaVersionyLBWxmW2e2r2xnf83DbgElfnTGMZxWGNmVBwaCxNU"
            },
            "Export": {
              "Name": "sls-media-service-dev-DeleteReviewLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-media-service-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-media-service-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "trendingMedia": {
        "handler": "api/functions/media.trending_media",
        "events": [
          {
            "httpApi": "GET /media/trending-media",
            "resolvedMethod": "GET",
            "resolvedPath": "/media/trending-media"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"TrendingMediaIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "media-service-dev-trendingMedia",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "TrendingMediaLambdaVersionyAS9Nml2nhfeCFjmXjuFfZd8AbVo0VGiKm8RQLA"
      },
      "popularMovies": {
        "handler": "api/functions/media.popular_movies",
        "events": [
          {
            "httpApi": "GET /media/popular-movies",
            "resolvedMethod": "GET",
            "resolvedPath": "/media/popular-movies"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PopularMoviesIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "media-service-dev-popularMovies",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "PopularMoviesLambdaVersionzH2HVnoUlXfPR9x5jFm82vk9eTJJAXtVP5P24tk7E"
      },
      "searchMedia": {
        "handler": "api/functions/media.search",
        "events": [
          {
            "httpApi": "GET /media/search/{query}",
            "resolvedMethod": "GET",
            "resolvedPath": "/media/search/{query}"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchMediaIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "media-service-dev-searchMedia",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "SearchMediaLambdaVersion8r0GbkB8nvrt1TiXryUiIPaqs7uuY60zdZzqpKu0LM"
      },
      "getMedia": {
        "handler": "api/functions/media.get_media",
        "events": [
          {
            "httpApi": "GET /media",
            "resolvedMethod": "GET",
            "resolvedPath": "/media"
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMediaIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "media-service-dev-getMedia",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetMediaLambdaVersionqaCwYUFunYbU4RJxvF6TgAb1tVhR5TipwNKKO6fhew"
      },
      "Reviews": {
        "handler": "api/functions/reviews.index_reviews",
        "events": [
          {
            "httpApi": "GET /reviews",
            "resolvedMethod": "GET",
            "resolvedPath": "/reviews"
          }
        ],
        "name": "media-service-dev-Reviews",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "ReviewsLambdaVersion0l5xFHV0D2lX3cipVV3z5CgSZtF1OKkanGwOX3pc"
      },
      "newReview": {
        "handler": "api/functions/reviews.new_review",
        "events": [
          {
            "httpApi": "POST /reviews",
            "resolvedMethod": "POST",
            "resolvedPath": "/reviews"
          }
        ],
        "name": "media-service-dev-newReview",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "NewReviewLambdaVersionI5B8TRHW8HnCMDnMKyjjJSg8z9iBfEkW1N93sZJIZQ"
      },
      "deleteReview": {
        "handler": "api/functions/reviews.delete_review",
        "events": [
          {
            "httpApi": "DELETE /reviews/{review_id}",
            "resolvedMethod": "DELETE",
            "resolvedPath": "/reviews/{review_id}"
          }
        ],
        "name": "media-service-dev-deleteReview",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "DeleteReviewLambdaVersionyLBWxmW2e2r2xnf83DbgElfnTGMZxWGNmVBwaCxNU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "media-service",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/kiirb/Desktop/media-serverless/.serverless/media-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/media-service/dev/1706496141363-2024-01-29T02:42:21.363Z",
    "artifact": "media-service.zip"
  }
}